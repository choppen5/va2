'
' Project: DDS Project
' Author : Charles Oppenheimer
' Date   : Nov 24 2002 20:39
' File auto-generated by Database Design Studio V1.09.2
'
'
' Target DBMS: 'Access'
'
 
 
'
' Table               : errorevent
' Description         : popultated as result of error deff conditions or  - via XML interface or ODBC
' errorevent_id       : 
' type                : 
' event_sub_type      : 
' event_level         : 
' event_time          : 
' event_string        : 
' status              : 
' error_defs_id       : 
' cc_alias            : 
' sv_name             : 
' sft_elmnt_id        : 
' processed           : 
' reactionfired       : 
' host                : host where error occured 
' analysis_rule_id    : 
' note_rule_id        : 
' error_def_id        : 
'
create table errorevent (
    errorevent_id   long not null,
    type            text(50),
    event_sub_type  text(50),
    event_level     text(20),
    event_time      text(50),
    event_string    text(254),
    status          text(10),
    error_defs_id   long,
    cc_alias        text(50),
    sv_name         text(50),
    sft_elmnt_id    long,
    processed       text(1),
    reactionfired   text(1),
    host            text(50),
    analysis_rule_id long,
    note_rule_id    long,
    error_def_id    long,
constraint pk_errorevent primary key (errorevent_id))
 
 
'
' Table               : notification_rule
' Description         : rules for monitoring error event table - conditions will be "anded" - will send messages to communication server
' note_rule_id        : shorted to avaoid trucation 
' name                : user name for notification rule 
' message             : not a condition 
' notify_all          : 
' incl_ev_string      : 
' inc_ev_level        : 
' inc_ev_subtype      : 
' type                : 
' status              : 
' active              : 
' ev_sft_elmnt_id     : anded foriegn key to application table 
' ev_event_sub_type   : anded 
' ev_event_level      : anded 
' ev_event_time       : anded 
' ev_event_string     : anded - regexp 
' ev_type             : 
'
create table notification_rule (
    note_rule_id    long not null,
    name            text(30),
    message         text(245) not null,
    notify_all      text(1),
    incl_ev_string  text(1),
    inc_ev_level    text(50),
    inc_ev_subtype  text(1),
    type            text(50),
    status          text(10),
    active          text(1),
    ev_sft_elmnt_id long,
    ev_event_sub_type text(50),
    ev_event_level  long,
    ev_event_time   text(50),
    ev_event_string text(254),
    ev_type         text(20),
constraint pk_notification_rule primary key (note_rule_id))
 
 
'
' Table               : host
' Description         : machine specific info
' host_id             : 
' hostname            : 
' ipaddress           : 
' os                  : 
' status              : 
' username            : 
' password            : 
' check_interval      : 
'
create table host (
    host_id         long not null,
    hostname        text(50),
    ipaddress       text(50),
    os              text(50),
    status          text(20),
    username        text(100),
    password        text(100),
    check_interval  long,
constraint pk_host primary key (host_id))
 
 
'
' Table               : schedule
' Description         : first draft
' schedule_id         : 
' schedule_every      : overides all hour minutes specs 
' monday              : 
' tuesday             : 
' wednesday           : 
' thursday            : 
' friday              : 
' saturday            : 
' sunday              : 
' every_day           : overides daily columns 
' hour_start          : 24 
' minute_start        : 60 
' hour_end            : 60 
' minute_end          : 
' every_hour          : overides hour/minutes 
' schd_name           : 
' start_time          : 
' end_time            : 
'
create table schedule (
    schedule_id     long not null,
    schedule_every  text(1),
    monday          text(1),
    tuesday         text(1),
    wednesday       text(1),
    thursday        text(1),
    friday          text(1),
    saturday        text(1),
    sunday          text(1),
    every_day       text(1),
    hour_start      text(2),
    minute_start    text(2),
    hour_end        text(2),
    minute_end      text(2),
    every_hour      text(1),
    schd_name       text(50),
    start_time      datetime,
    end_time        datetime,
constraint pk_schedule primary key (schedule_id))
 
 
'
' Table               : comunicationserver
' Description         : 
' com_server_id       : truncated from comunicationserver_id 
' smtp_server         : 
' webserver           : for future use 
' paging_server       : futureuse 
' modemnumber         : future use 
' type                : 
' active              : 
' name                : 
'
create table comunicationserver (
    com_server_id   long not null,
    smtp_server     text(50),
    webserver       text(50),
    paging_server   text(50),
    modemnumber     text(50),
    type            text(20),
    active          text(1),
    name            text(50),
constraint pk_comunicationserver primary key (com_server_id))
 
 
'
' Table               : system_msg
' Description         : 
' system_msg_id       : 
' type                : 
' message             : 
' host                : 
' app_server          : 
' processesed         : 
'
create table system_msg (
    system_msg_id   long not null,
    type            text(50),
    message         text(50),
    host            text(50),
    app_server      text(50),
    processesed     text(1),
constraint pk_system_msg primary key (system_msg_id))
 
 
'
' Table               : analysis_rule
' Description         : deffinition for a executible system check
' analysis_rule_id    : 
' type                : 
' rule_def            : definition -sql, wmi, perl, etc 
' error               : error message displayed if rule unexecutible 
' name                : 
' sf_error_deff_id    : 
' active              : 
' execution_interval  : 
' description         : 
'
create table analysis_rule (
    analysis_rule_id long not null,
    type            text(10),
    rule_def        text(4000),
    error           text(254),
    name            text(100),
    sf_error_deff_id long,
    active          text(1),
    execution_interval text(10),
    description     text(100),
constraint pk_analysis_rule primary key (analysis_rule_id))
 
 
'
' Table               : reaction
' Description         : deffinition for a executible system check
' reaction_id         : 
' type                : 
' rule_def            : definition -sql, wmi, perl, etc 
' error               : error message displayed if rule unexecutible 
' name                : 
' host_specific       : if true, execute reaction on host of error,otherwise central 
' active              : 
' sv_name             : 
'
create table reaction (
    reaction_id     long not null,
    type            text(10),
    rule_def        text(2000),
    error           text(100),
    name            text(20),
    host_specific   text(50),
    active          text(1),
    sv_name         text(50),
constraint pk_reaction primary key (reaction_id))
 
 
'
' Table               : collector
' Description         : script/sql to collect non internal statistics
' collector_id        : 
' type                : 
' rule_def            : definition -sql, wmi, perl, etc 
' error               : error message displayed if rule unexecutible 
' name                : 
' odbc                : 
' active              : 
' sft_elmnt_id        : 
' host_id             : host a collector is associated with 
' description         : description of the statistic 
' execution_interval  : 
' max_records         : 
'
create table collector (
    collector_id    long not null,
    type            text(10),
    rule_def        text(4000),
    error           text(254),
    name            text(100),
    odbc            text(50),
    active          text(1),
    sft_elmnt_id    text(10),
    host_id         text(10),
    description     text(100),
    execution_interval long,
    max_records     long,
constraint pk_collector primary key (collector_id))
 
 
'
' Table               : sft_mng_sys
' Description         : 
' sft_mng_sys_id      : 
' name                : 
' status              : 
' state               : 
' type                : 
'
create table sft_mng_sys (
    sft_mng_sys_id  long not null,
    name            text(50),
    status          text(20),
    state           text(20),
    type            text(50),
constraint pk_sft_mng_sys primary key (sft_mng_sys_id))
 
 
'
' Table               : sft_error_defs
' Description         : string errors and messages will be configured per component/appserver
' error_defs_id       : 
' ev_type             : 
' ev_level            : 
' ev_time             : 
' search_string       : 
' ev_sub_type         : 
' host                : 
' name                : Name of Error Deffinition 
' sv_name             : 
' cc_alias            : 
' sf_elmnt_id         : 
' active              : 
' type                : type of error definition 
'
create table sft_error_defs (
    error_defs_id   long not null,
    ev_type         text(50),
    ev_level        text(50),
    ev_time         text(50),
    search_string   text(254),
    ev_sub_type     text(50),
    host            text(254),
    name            text(50),
    sv_name         text(50),
    cc_alias        text(50),
    sf_elmnt_id     text(50),
    active          text(1),
    type            text(10) not null,
constraint pk_sft_error_defs primary key (error_defs_id))
 
 
'
' Table               : server_task
' Description         : related to sft_elment (for all tasks per app server) or components and monitored_comps , (all task per component)
' server_task_id      : 
' sv_name             : 
' cc_alias            : 
' tk_taskid           : 
' tk_pid              : 
' tk_disp_runstate    : 
' cc_runmode          : 
' tk_start_time       : 
' tk_end_time         : 
' tk_status           : 
' cg_alias            : 
' sft_elmnt_id        : 
' sft_elmnt_comp_id   : 
' tk_parent_t         : 
' cc_incarn_no        : 
' tk_label            : 
' tk_tasktype         : 
'
create table server_task (
    server_task_id  long not null,
    sv_name         text(100),
    cc_alias        text(100),
    tk_taskid       long,
    tk_pid          long,
    tk_disp_runstate text(100),
    cc_runmode      text(100),
    tk_start_time   text(50),
    tk_end_time     text(50),
    tk_status       text(254),
    cg_alias        text(100),
    sft_elmnt_id    long,
    sft_elmnt_comp_id long,
    tk_parent_t     text(50),
    cc_incarn_no    text(50),
    tk_label        text(50),
    tk_tasktype     text(50),
constraint pk_server_task primary key (server_task_id))
 
 
'
' Table               : monitored_comps
' Description         : represents all components per app server being monitored
' monitored_comps_id  : 
' sv_name             : 
' cp_max_mts          : 
' cc_name             : use this key to show running components per component deff 
' ct_alias            : 
' cg_name             : 
' cc_runmode          : 
' cp_disp_run_state   : 
' cp_num_run          : 
' cp_max_tas          : 
' cp_actv_mt          : 
' cc_alias            : 
' cp_start_time       : 
' cp_end_time         : 
' cp_status           : 
' sft_elmnt_id        : 
' sft_elmnt_comp_id   : 
'
create table monitored_comps (
    monitored_comps_id long not null,
    sv_name         text(50),
    cp_max_mts      text(10),
    cc_name         text(50),
    ct_alias        text(50),
    cg_name         text(50),
    cc_runmode      text(50),
    cp_disp_run_state text(50),
    cp_num_run      text(10),
    cp_max_tas      text(10),
    cp_actv_mt      text(10),
    cc_alias        text(50),
    cp_start_time   text(50),
    cp_end_time     text(50),
    cp_status       text(50),
    sft_elmnt_id    long,
    sft_elmnt_comp_id text(50),
constraint pk_monitored_comps primary key (monitored_comps_id))
 
 
'
' Table               : processes
' Description         : related to the app server via sft_enlmnt_id, aslo to component or task via cc_name or ct_name,respectively
' process_id          : 
' sv_name             : 
' task_id             : 
' pid                 : 
' cc_alias            : 
' cc_name             : 
' host                : 
' state               : 
' process             : 
' cpu                 : 
' cpu_time            : 
' memory              : 
' pagefaults          : 
' virtualmem          : 
' priority            : 
' threads             : 
' sft_elmnt_id        : 
' sft_elmnt_comp_id   : 
' kernel_time         : 
' user_time           : 
'
create table processes (
    process_id      long not null,
    sv_name         text(50),
    task_id         text(10),
    pid             text(10),
    cc_alias        text(50),
    cc_name         text(100),
    host            text(50),
    state           text(50),
    process         text(50),
    cpu             double,
    cpu_time        text(10),
    memory          long,
    pagefaults      long,
    virtualmem      long,
    priority        text(50),
    threads         text(10),
    sft_elmnt_id    text(10),
    sft_elmnt_comp_id text(10),
    kernel_time     text(10),
    user_time       text(10),
constraint pk_processes primary key (process_id))
 
 
'
' Table               : components
' Description         : will contain all Siebel default components, plus user definable components
' components_id       : 
' description         : 
' log_analyze         : 
' log_monitor         : 
' sft_elmnt_id        : 
' cc_alias            : 
'
create table components (
    components_id   long not null,
    description     text(100),
    log_analyze     text(1),
    log_monitor     text(1),
    sft_elmnt_id    long,
    cc_alias        text(80) not null,
constraint pk_components primary key (components_id))
 
 
'
' Table               : analysis_err
' Description         : If the anlaysis object returns false, the error defined here will be inserted into error event table
' analysis_err_id     : 
' evt_type            : 
' evt_event_sub_type  : 
' evt_event_level     : 
' evt_event_time      : 
' evt_event_string    : 
' evt_status          : 
' evt_cc_alias        : 
' evt_sv_name         : 
' evt_sft_elmnt_id    : 
' evt_host            : 
' name                : 
'
create table analysis_err (
    analysis_err_id long not null,
    evt_type        text(10),
    evt_event_sub_type text(50),
    evt_event_level long,
    evt_event_time  text(50),
    evt_event_string text(254),
    evt_status      text(50),
    evt_cc_alias    text(50),
    evt_sv_name     text(50),
    evt_sft_elmnt_id long,
    evt_host        text(254),
    name            text(50),
constraint pk_analysis_err primary key (analysis_err_id))
 
 
'
' Table               : tableids
' Description         : 
' table_name          : 
' id                  : 
'
create table tableids (
    table_name      text(50) not null,
    id              long not null,
constraint pk_tableids primary key (table_name))
 
 
'
' Table               : data_source
' Description         : 
' data_source_id      : 
' name                : 
' username            : 
' password            : 
' host                : 
' alias               : alias name for ODBC 
'
create table data_source (
    data_source_id  long not null,
    name            text(50),
    username        text(50),
    password        text(50),
    host            text(50),
    alias           text(50) not null,
constraint pk_data_source primary key (data_source_id, alias))
 
 
'
' Table               : administrators
' Description         : persons with email address 
' administrators_id   : 
' first_name          : 
' last_name           : 
' password            : 
' email               : 
' phone               : 
' pager               : 
' default_admin       : 
' user_name           : 
' schedule_id         : (Foreign Key
'                        references SCHEDULE.schedule_id)
'
create table administrators (
    administrators_id long not null,
    first_name      text(50),
    last_name       text(50),
    password        text(50),
    email           text(70),
    phone           text(50),
    pager           text(50),
    default_admin   text(1),
    user_name       text(50),
    schedule_id     long,
constraint pk_administrators primary key (administrators_id),
constraint fk_administrators foreign key (schedule_id)
    references schedule (schedule_id))
 
 
'
' Table               : errorexceptions
' Description         : ignore errors based on time/date or string
' errorexceptions_id  : 
' errorexception      : 
' time_exemption      : ignore errors before this date 
' err_type_exept      : 
' note_rule_id        : shorted to avaoid trucation (Foreign Key
'                        references NOTIFICATION_RULE.note_rule_id)
'
create table errorexceptions (
    errorexceptions_id text(10) not null,
    errorexception  text(254),
    time_exemption  datetime,
    err_type_exept  text(10),
    note_rule_id    long,
constraint pk_errorexceptions primary key (errorexceptions_id),
constraint fk_errorexceptions foreign key (note_rule_id)
    references notification_rule (note_rule_id))
 
 
'
' Table               : host_os_stats
' Description         : machine specific info
' db_id               : 
' running_since       : 
' status              : 
' memory_consuption   : 
' cpu_utilization     : 
' time_stamp          : 
' host_id             : (Foreign Key
'                        references HOST.host_id)
'
create table host_os_stats (
    db_id           text(10) not null,
    running_since   datetime,
    status          text(10),
    memory_consuption text(50),
    cpu_utilization text(50),
    time_stamp      datetime,
    host_id         long,
constraint pk_host_os_stats primary key (db_id),
constraint fk_host_os_stats foreign key (host_id)
    references host (host_id))
 
 
'
' Table               : com_admin
' Description         : 
' com_server_id       : truncated from comunicationserver_id (Foreign Key
'                        references COMUNICATIONSERVER.com_server_id)
' administrators_id   : (Foreign Key
'                        references ADMINISTRATORS.administrators_id)
'
create table com_admin (
    com_server_id   long not null,
    administrators_id long not null,
constraint pk_com_admin primary key (com_server_id, administrators_id),
constraint fk_com_admin1 foreign key (com_server_id)
    references comunicationserver (com_server_id),
constraint fk_com_admin2 foreign key (administrators_id)
    references administrators (administrators_id))
 
 
'
' Table               : stat_vals
' Description         : values populated as result of stat_defs
' stat_vals_id        : 
' val                 : 
' time_stmp           : 
' collector_id        : (Foreign Key
'                        references COLLECTOR.collector_id)
'
create table stat_vals (
    stat_vals_id    long not null,
    val             double not null,
    time_stmp       datetime not null,
    collector_id    long,
constraint pk_stat_vals primary key (stat_vals_id),
constraint fk_stat_vals foreign key (collector_id)
    references collector (collector_id))
 
 
'
' Table               : sft_elmnt
' Description         : 
' sft_elmnt_id        : 
' type                : 
' description         : 
' name                : 
' os                  : 
' host                : 
' installdir          : 
' status              : 
' exe                 : 
' service_name        : 
' parent_elmnt_id     : 
' logdir              : 
' monitor_service     : 
' restart_service     : 
' send_event          : send event on service failure 
' port                : 
' mon_interval        : 
' sft_mng_sys_id      : (Foreign Key
'                        references SFT_MNG_SYS.sft_mng_sys_id)
'
create table sft_elmnt (
    sft_elmnt_id    long not null,
    type            text(20),
    description     text(50),
    name            text(50),
    os              text(20),
    host            text(50),
    installdir      text(254),
    status          text(20),
    exe             text(50),
    service_name    text(50),
    parent_elmnt_id long,
    logdir          text(254),
    monitor_service text(1),
    restart_service text(1),
    send_event      text(1),
    port            double,
    mon_interval    long,
    sft_mng_sys_id  long,
constraint pk_sft_elmnt primary key (sft_elmnt_id),
constraint fk_sft_elmnt foreign key (sft_mng_sys_id)
    references sft_mng_sys (sft_mng_sys_id))
 
 
'
' Table               : sft_elmnt_comp
' Description         : key value description of component
' sft_elmnt_comp_id   : 
' type                : 
' elmnt_key           : 
' elmnt_value         : 
' status              : 
' sft_elmnt_id        : (Foreign Key
'                        references SFT_ELMNT.sft_elmnt_id)
'
create table sft_elmnt_comp (
    sft_elmnt_comp_id long not null,
    type            text(20),
    elmnt_key       text(50) not null,
    elmnt_value     text(254) not null,
    status          text(20),
    sft_elmnt_id    long,
constraint pk_sft_elmnt_comp primary key (sft_elmnt_comp_id),
constraint fk_sft_elmnt_comp foreign key (sft_elmnt_id)
    references sft_elmnt (sft_elmnt_id))
 
 
'
' Table               : comp_errdef
' Description         : 
' components_id       : (Foreign Key
'                        references COMPONENTS.components_id)
' error_defs_id       : (Foreign Key
'                        references SFT_ERROR_DEFS.error_defs_id)
'
create table comp_errdef (
    components_id   long not null,
    error_defs_id   long not null,
constraint pk_comp_errdef primary key (components_id, error_defs_id),
constraint fk_comp_errdef1 foreign key (components_id)
    references components (components_id),
constraint fk_comp_errdef2 foreign key (error_defs_id)
    references sft_error_defs (error_defs_id))
 
 
'
' Table               : com_srvr_vals
' Description         : key value description of component
' com_srvr_vals_id    : 
' type                : 
' elmnt_key           : 
' elmnt_value         : 
' status              : 
' com_server_id       : truncated from comunicationserver_id (Foreign Key
'                        references COMUNICATIONSERVER.com_server_id)
'
create table com_srvr_vals (
    com_srvr_vals_id long not null,
    type            text(20),
    elmnt_key       text(50) not null,
    elmnt_value     text(254) not null,
    status          text(20),
    com_server_id   long,
constraint pk_com_srvr_vals primary key (com_srvr_vals_id),
constraint fk_com_srvr_vals foreign key (com_server_id)
    references comunicationserver (com_server_id))
 
 
'
' Table               : notification_reaction
' Description         : 
' note_rule_id        : shorted to avaoid trucation (Foreign Key
'                        references NOTIFICATION_RULE.note_rule_id)
' reaction_id         : (Foreign Key
'                        references REACTION.reaction_id)
'
create table notification_reaction (
    note_rule_id    long not null,
    reaction_id     long not null,
constraint pk_notification_reaction primary key (note_rule_id, reaction_id),
constraint fk_notification_reaction1 foreign key (note_rule_id)
    references notification_rule (note_rule_id),
constraint fk_notification_reaction2 foreign key (reaction_id)
    references reaction (reaction_id))
 
 
'
' Table               : analysis_errdef
' Description         : 
' analysis_rule_id    : (Foreign Key
'                        references ANALYSIS_RULE.analysis_rule_id)
' error_defs_id       : (Foreign Key
'                        references SFT_ERROR_DEFS.error_defs_id)
'
create table analysis_errdef (
    analysis_rule_id long not null,
    error_defs_id   long not null,
constraint pk_analysis_errdef primary key (analysis_rule_id, error_defs_id),
constraint fk_analysis_errdef1 foreign key (analysis_rule_id)
    references analysis_rule (analysis_rule_id),
constraint fk_analysis_errdef2 foreign key (error_defs_id)
    references sft_error_defs (error_defs_id))
 
 
'
' Table               : sft_err_deff
' Description         : 
' sft_elmnt_id        : (Foreign Key
'                        references SFT_ELMNT.sft_elmnt_id)
' error_defs_id       : (Foreign Key
'                        references SFT_ERROR_DEFS.error_defs_id)
'
create table sft_err_deff (
    sft_elmnt_id    long not null,
    error_defs_id   long not null,
constraint pk_sft_err_deff primary key (sft_elmnt_id, error_defs_id),
constraint fk_sft_err_deff1 foreign key (sft_elmnt_id)
    references sft_elmnt (sft_elmnt_id),
constraint fk_sft_err_deff2 foreign key (error_defs_id)
    references sft_error_defs (error_defs_id))
 
