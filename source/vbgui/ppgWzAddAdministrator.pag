VERSION 5.00
Begin VB.PropertyPage ppgWzAddAdmin 
   Caption         =   "Add new Administrator"
   ClientHeight    =   3720
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   5115
   LockControls    =   -1  'True
   PaletteMode     =   0  'Halftone
   ScaleHeight     =   3720
   ScaleWidth      =   5115
   Begin VB.OptionButton optExistAdmin 
      Caption         =   "&Select existing Administrator"
      Enabled         =   0   'False
      Height          =   255
      Left            =   240
      TabIndex        =   8
      Top             =   2400
      Width           =   2505
   End
   Begin VB.OptionButton optNewAdmin 
      Caption         =   "A&dd new Administrator"
      Height          =   285
      Left            =   240
      TabIndex        =   1
      Top             =   750
      Value           =   -1  'True
      Width           =   2505
   End
   Begin VB.ComboBox cmbAdmins 
      BackColor       =   &H8000000F&
      Enabled         =   0   'False
      Height          =   315
      Left            =   1440
      Style           =   2  'Dropdown List
      TabIndex        =   10
      Top             =   2700
      Width           =   2685
   End
   Begin VB.TextBox txtEmail 
      Height          =   360
      Left            =   1440
      MaxLength       =   70
      TabIndex        =   7
      Top             =   1920
      Width           =   2685
   End
   Begin VB.TextBox txtFName 
      Height          =   360
      Left            =   1440
      MaxLength       =   50
      TabIndex        =   3
      Top             =   1080
      Width           =   2685
   End
   Begin VB.TextBox txtLName 
      Height          =   360
      Left            =   1440
      MaxLength       =   50
      TabIndex        =   5
      Top             =   1500
      Width           =   2685
   End
   Begin VB.Label Label5 
      Caption         =   "Now add a schedule for administrator"
      Height          =   285
      Left            =   210
      TabIndex        =   11
      Top             =   3400
      Width           =   3645
   End
   Begin VB.Label Label1 
      Caption         =   "Administrator"
      Height          =   240
      Left            =   240
      TabIndex        =   9
      Top             =   2730
      Width           =   1185
   End
   Begin VB.Label lblSubTitle 
      Caption         =   "Enter Administrator information"
      Height          =   390
      Left            =   240
      TabIndex        =   0
      Top             =   270
      Width           =   3720
   End
   Begin VB.Label Label2 
      Caption         =   "&First Name:"
      Height          =   240
      Left            =   240
      TabIndex        =   2
      Top             =   1140
      Width           =   1185
   End
   Begin VB.Label Label3 
      Caption         =   "&Last Name:"
      Height          =   240
      Left            =   240
      TabIndex        =   4
      Top             =   1560
      Width           =   1185
   End
   Begin VB.Label Label4 
      Caption         =   "&Email Address:"
      Height          =   240
      Left            =   240
      TabIndex        =   6
      Top             =   1980
      Width           =   1185
   End
End
Attribute VB_Name = "ppgWzAddAdmin"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit

Implements IWizardPage
Implements IMMCPropertyPage

Private ConfigData As clsConfigData
Private PSheet As SnapInLib.MMCPropertySheet
Private ButtonState As SnapInLib.WizardPageButtonConstants     'Next is disable or enable

Private Sub IMMCPropertyPage_Cancel()

End Sub

Private Sub IMMCPropertyPage_Close()

End Sub

Private Sub IMMCPropertyPage_GetDialogUnitSize(Height As Variant, Width As Variant)

End Sub

Private Sub IMMCPropertyPage_Help()

End Sub

Private Sub IMMCPropertyPage_Initialize(ByVal Data As Variant, ByVal PropertySheet As SnapInLib.MMCPropertySheet)
    Set PSheet = PropertySheet
End Sub

Private Sub IMMCPropertyPage_QueryCancel(Allow As Boolean)

End Sub

Private Sub IWizardPage_Activate(EnableBack As Boolean, NextOrFinish As SnapInLib.WizardPageButtonConstants, FinishText As String)
    EnableBack = True

#If Debugging Then
    ButtonState = EnabledNextButton
#Else
    ButtonState = DisabledNextButton 'NextOrFinish
#End If

    SetNext
    NextOrFinish = ButtonState ' EnabledNextButton
End Sub

Private Sub IWizardPage_Back(NextPage As Long)
    If Not ConfigData.Authentication Then NextPage = 2
End Sub

Private Sub IWizardPage_Finish(Allow As Boolean)

End Sub

Private Sub IWizardPage_Next(NextPage As Long)
    If optNewAdmin.value Then
        If Not txtemail.Text Like "*?@?*" Then
            NextPage = -1
            MsgBox "Please enter a valid Email Address", vbExclamation
        End If
    End If
End Sub

Private Sub optExistAdmin_Click()
    SetNext
    NewOrExist optNewAdmin.value
    SetFocusCtrl cmbAdmins
End Sub

Private Sub optNewAdmin_Click()
    SetNext
    NewOrExist optNewAdmin.value
    SetFocusCtrl txtFName
End Sub

Private Sub PropertyPage_ApplyChanges()
    With ConfigData
        .AdminFName = txtFName.Text
        .AdminLName = txtLName.Text
        .AdminEmail = txtemail.Text
        If optExistAdmin.value Then
            .AdminID = cmbAdmins.ItemData(cmbAdmins.ListIndex)
            .AdminFullName = cmbAdmins.Text
        Else
            .AdminID = 0
            .AdminFullName = txtFName.Text & " " & txtLName.Text
        End If
    End With
End Sub

Private Sub PropertyPage_GotFocus()
    SetFocusCtrl txtFName
End Sub

Private Sub PropertyPage_SelectionChanged()

    On Error Resume Next
    Set ConfigData = SelectedControls(0)
    If ConfigData Is Nothing Then
        Set ConfigData = SelectedControls(0).Tag
    End If
    
    LoadAdminsList

End Sub

Private Sub NewOrExist(ByVal IsNew As Boolean)
    txtFName.Enabled = IsNew
    txtLName.Enabled = IsNew
    txtemail.Enabled = IsNew
    txtFName.BackColor = IIf(IsNew, vbWindowBackground, vbButtonFace)
    txtLName.BackColor = txtFName.BackColor
    txtemail.BackColor = txtFName.BackColor

    cmbAdmins.Enabled = Not IsNew
    cmbAdmins.BackColor = IIf(IsNew, vbButtonFace, vbWindowBackground)
End Sub

Private Sub LoadAdminsList()
On Error GoTo ErroroHandler
    Dim rs As adodb.Recordset
    Dim dobj As New VadminUI.vaDataAccess

    cmbAdmins.Clear

    Set rs = dobj.GetAdminsList()
    With rs
        Do Until .EOF
            cmbAdmins.AddItem Trim(!first_name & "") & " " & Trim(!last_name & "")
            cmbAdmins.ItemData(cmbAdmins.NewIndex) = !administrators_id
            .MoveNext
        Loop
    End With
    If cmbAdmins.ListCount > 0 Then
        cmbAdmins.ListIndex = 0
        optExistAdmin.Enabled = True
    End If
 
    Exit Sub
ErroroHandler:
    ErrorH 0
    Exit Sub
End Sub

Private Sub SetNext()
    Dim IsNext As Boolean

#If Debugging Then
    Exit Sub
#End If
    
    If optNewAdmin.value Then
        If Len(txtFName.Text) > 0 Then
            If Len(txtemail.Text) > 0 Then IsNext = True
        End If
    Else
        IsNext = True
    End If
    'It is to prevent unnecessary calls of PSheet.SetWizardButtons
    If IsNext And ButtonState = DisabledNextButton Then
        PSheet.SetWizardButtons True, EnabledNextButton
        ButtonState = EnabledNextButton
    ElseIf Not IsNext And ButtonState = EnabledNextButton Then
        PSheet.SetWizardButtons True, DisabledNextButton
        ButtonState = DisabledNextButton
    End If
    
End Sub

Private Sub txtEmail_Change()
    SetNext
End Sub

Private Sub txtemail_GotFocus()
    SelTextbox txtemail
End Sub

Private Sub txtFName_Change()
    SetNext
End Sub

Private Sub txtFName_GotFocus()
    SelTextbox txtFName
End Sub

Private Sub txtLName_GotFocus()
    SelTextbox txtLName
End Sub
