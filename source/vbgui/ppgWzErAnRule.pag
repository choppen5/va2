VERSION 5.00
Begin VB.PropertyPage ppgWzErAnRule 
   Caption         =   "Event Routing Wizard"
   ClientHeight    =   2475
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   4890
   PaletteMode     =   0  'Halftone
   ScaleHeight     =   2475
   ScaleWidth      =   4890
   Begin VB.OptionButton optNoAnRule 
      Caption         =   "No Analysis Rule"
      Height          =   285
      Left            =   240
      TabIndex        =   3
      Top             =   1800
      Width           =   3345
   End
   Begin VB.OptionButton optAnRule 
      Caption         =   "Choose Analysis Rule"
      Height          =   285
      Left            =   240
      TabIndex        =   2
      Top             =   780
      Value           =   -1  'True
      Width           =   3345
   End
   Begin VB.ComboBox cmbAnRules 
      Height          =   315
      Left            =   1410
      Style           =   2  'Dropdown List
      TabIndex        =   0
      Top             =   1170
      Width           =   3075
   End
   Begin VB.Label Label2 
      Caption         =   "Event Routing Wizard"
      Height          =   435
      Left            =   240
      TabIndex        =   4
      Top             =   270
      Width           =   3945
   End
   Begin VB.Label Label1 
      Caption         =   "Analysis Rule"
      Height          =   240
      Left            =   240
      TabIndex        =   1
      Top             =   1200
      Width           =   1155
   End
End
Attribute VB_Name = "ppgWzErAnRule"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit

Implements IWizardPage
Implements IMMCPropertyPage     'For enable(disable) Back and Next buttons

Private ConfigData As clsEventWzData
Private PSheet As SnapInLib.MMCPropertySheet

Private Sub IMMCPropertyPage_Cancel()

End Sub

Private Sub IMMCPropertyPage_Close()

End Sub

Private Sub IMMCPropertyPage_GetDialogUnitSize(Height As Variant, Width As Variant)

End Sub

Private Sub IMMCPropertyPage_Help()

End Sub

Private Sub IMMCPropertyPage_Initialize(ByVal Data As Variant, ByVal PropertySheet As SnapInLib.MMCPropertySheet)
    Set PSheet = PropertySheet
End Sub

Private Sub IMMCPropertyPage_QueryCancel(Allow As Boolean)

End Sub

Private Sub IWizardPage_Activate(EnableBack As Boolean, NextOrFinish As SnapInLib.WizardPageButtonConstants, FinishText As String)
    EnableBack = False
    NextOrFinish = EnabledNextButton
End Sub

Private Sub IWizardPage_Back(NextPage As Long)

End Sub

Private Sub IWizardPage_Finish(Allow As Boolean)

End Sub

Private Sub IWizardPage_Next(NextPage As Long)

End Sub

Private Sub optAnRule_Click()
    ChooseAnRule True
End Sub

Private Sub optNoAnRule_Click()
    ChooseAnRule False
End Sub

Private Sub PropertyPage_ApplyChanges()
    With ConfigData
        If Not .FromAnRule Then
            If cmbAnRules.ListIndex = -1 Then
                .AnRuleID = 0
            Else
                .AnRuleID = cmbAnRules.ItemData(cmbAnRules.ListIndex)
            End If
            .AnRuleName = cmbAnRules.Text
            .NoAnRule = optNoAnRule.value
        End If
    End With
End Sub

Private Sub PropertyPage_GotFocus()
    SetFocusCtrl optAnRule
End Sub

Private Sub PropertyPage_SelectionChanged()

    On Error Resume Next
    Set ConfigData = SelectedControls(0)
    If ConfigData Is Nothing Then
        Set ConfigData = SelectedControls(0).Tag
    End If

    LoadAnRulesList

End Sub

Private Sub ChooseAnRule(ByVal IsAnRule As Boolean)
    cmbAnRules.Enabled = IsAnRule
    cmbAnRules.BackColor = IIf(IsAnRule, vbWindowBackground, vbButtonFace)
End Sub

Private Sub LoadAnRulesList()
On Error GoTo ErroroHandler
    Dim rs As adodb.Recordset
    Dim dobj As New VadminUI.vaDataAccess

    cmbAnRules.Clear

    If ConfigData.FromAnRule Then
        cmbAnRules.AddItem ConfigData.AnRuleName
        cmbAnRules.ItemData(cmbAnRules.NewIndex) = ConfigData.AnRuleID
        cmbAnRules.ListIndex = 0
        optNoAnRule.Enabled = False
        Exit Sub
    End If

    Set rs = dobj.GetAnRulesList()
    With rs
        Do Until .EOF
            cmbAnRules.AddItem Trim(!Name & "")
            cmbAnRules.ItemData(cmbAnRules.NewIndex) = !analysis_rule_id
            .MoveNext
        Loop
    End With
    If cmbAnRules.ListCount > 0 Then
        cmbAnRules.ListIndex = 0
    Else
        optAnRule.Enabled = False
        optNoAnRule.value = True
    End If
 
    Exit Sub
ErroroHandler:
    ErrorH 0
    Exit Sub
End Sub

