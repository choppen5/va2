VERSION 5.00
Begin VB.PropertyPage ppgWzErErrDef 
   Caption         =   "Error Definition"
   ClientHeight    =   3600
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   4545
   LockControls    =   -1  'True
   PaletteMode     =   0  'Halftone
   ScaleHeight     =   3600
   ScaleWidth      =   4545
   Begin VB.TextBox txtName 
      Height          =   360
      Left            =   1440
      MaxLength       =   50
      TabIndex        =   2
      Top             =   780
      Width           =   2685
   End
   Begin VB.TextBox txtSearchString 
      BackColor       =   &H8000000F&
      Enabled         =   0   'False
      Height          =   690
      Left            =   1440
      MaxLength       =   70
      MultiLine       =   -1  'True
      TabIndex        =   11
      Top             =   2880
      Width           =   2685
   End
   Begin VB.CheckBox chkSearchLog 
      Caption         =   "Is error definition for Searching log files?"
      Height          =   285
      Left            =   240
      TabIndex        =   9
      Top             =   2520
      Width           =   3615
   End
   Begin VB.TextBox txtEvType 
      Height          =   360
      Left            =   1440
      MaxLength       =   50
      TabIndex        =   6
      Top             =   1620
      Width           =   2685
   End
   Begin VB.TextBox txtErrLevel 
      Height          =   360
      Left            =   1440
      MaxLength       =   50
      TabIndex        =   4
      Text            =   "0"
      Top             =   1200
      Width           =   2685
   End
   Begin VB.TextBox txtEvSubType 
      Height          =   360
      Left            =   1440
      MaxLength       =   70
      TabIndex        =   8
      Top             =   2040
      Width           =   2685
   End
   Begin VB.Label Label6 
      Caption         =   "Na&me:"
      Height          =   240
      Left            =   240
      TabIndex        =   1
      Top             =   840
      Width           =   1185
   End
   Begin VB.Label lblSearchString 
      Caption         =   "&Search String:"
      Height          =   240
      Left            =   240
      TabIndex        =   10
      Top             =   2940
      Width           =   1185
   End
   Begin VB.Label Label4 
      Caption         =   "Event Su&btype:"
      Height          =   240
      Left            =   240
      TabIndex        =   7
      Top             =   2100
      Width           =   1185
   End
   Begin VB.Label Label3 
      Caption         =   "Event &Type:"
      Height          =   240
      Left            =   240
      TabIndex        =   5
      Top             =   1680
      Width           =   1185
   End
   Begin VB.Label Label2 
      Caption         =   "Error &Level:"
      Height          =   240
      Left            =   240
      TabIndex        =   3
      Top             =   1260
      Width           =   1185
   End
   Begin VB.Label Label1 
      Caption         =   "The event when generated will have the following characteristics"
      Height          =   465
      Left            =   240
      TabIndex        =   0
      Top             =   270
      Width           =   4245
   End
End
Attribute VB_Name = "ppgWzErErrDef"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit

Implements IWizardPage
Implements IMMCPropertyPage     'For enable(disable) Back and Next buttons

Private ConfigData As clsEventWzData
Private PSheet As SnapInLib.MMCPropertySheet
Private ButtonState As SnapInLib.WizardPageButtonConstants     'Next is disable or enable

Private Sub chkSearchLog_Click()
    SetSeachStat chkSearchLog.value = 1
End Sub

Private Sub IMMCPropertyPage_Cancel()

End Sub

Private Sub IMMCPropertyPage_Close()

End Sub

Private Sub IMMCPropertyPage_GetDialogUnitSize(Height As Variant, Width As Variant)

End Sub

Private Sub IMMCPropertyPage_Help()

End Sub

Private Sub IMMCPropertyPage_Initialize(ByVal Data As Variant, ByVal PropertySheet As SnapInLib.MMCPropertySheet)
    Set PSheet = PropertySheet
End Sub

Private Sub IMMCPropertyPage_QueryCancel(Allow As Boolean)

End Sub

Private Sub IWizardPage_Activate(EnableBack As Boolean, NextOrFinish As SnapInLib.WizardPageButtonConstants, FinishText As String)
    EnableBack = True

#If Debugging Then
    ButtonState = EnabledNextButton
#Else
    ButtonState = IIf(IsNext, EnabledNextButton, DisabledNextButton)
#End If

'    SetNext
    NextOrFinish = ButtonState
End Sub

Private Sub IWizardPage_Back(NextPage As Long)

End Sub

Private Sub IWizardPage_Finish(Allow As Boolean)

End Sub

Private Sub IWizardPage_Next(NextPage As Long)

End Sub

Private Sub PropertyPage_ApplyChanges()
    With ConfigData
        .ErrName = txtName.Text
        .ErrLevel = txtErrLevel.Text
        .EventType = txtEvType.Text
        .EventSubType = txtEvSubType.Text
        .ErrForSearchLog = chkSearchLog.value = 1
        .ErrSearchStr = txtSearchString.Text
    End With
End Sub

Private Sub PropertyPage_GotFocus()
    SetFocusCtrl txtName
End Sub

Private Sub PropertyPage_SelectionChanged()

    On Error Resume Next
    Set ConfigData = SelectedControls(0)
    If ConfigData Is Nothing Then
        Set ConfigData = SelectedControls(0).Tag
    End If

    SetFromAnRuleStat

End Sub

Private Sub SetNext()
    Dim blnIsNext As Boolean

#If Debugging Then
    Exit Sub
#End If

    blnIsNext = IsNext()
    'It is to prevent unnecessary calls of PSheet.SetWizardButtons
    If blnIsNext And ButtonState = DisabledNextButton Then
        PSheet.SetWizardButtons True, EnabledNextButton
        ButtonState = EnabledNextButton
    ElseIf Not blnIsNext And ButtonState = EnabledNextButton Then
        PSheet.SetWizardButtons True, DisabledNextButton
        ButtonState = DisabledNextButton
    End If

End Sub

Private Sub txtErrLevel_GotFocus()
    SelTextbox txtErrLevel
End Sub

Private Sub txtErrLevel_LostFocus()
'    If Len(Trim(txtErrLevel.Text)) = 0 Then txtErrLevel.Text = "0"
    txtErrLevel.Text = StringToLong(Trim(txtErrLevel.Text))
End Sub

Private Sub txtEvType_GotFocus()
    SelTextbox txtEvType
End Sub

Private Sub txtEvSubType_GotFocus()
    SelTextbox txtEvSubType
End Sub

Private Sub txtName_Change()
    SetNext
End Sub

Private Sub txtName_GotFocus()
    SelTextbox txtName
End Sub

Private Sub txtSearchString_GotFocus()
    SelTextbox txtSearchString
End Sub

Private Sub SetSeachStat(ByVal IsSearchLog As Boolean)
    txtSearchString.Enabled = IsSearchLog
    txtSearchString.BackColor = IIf(IsSearchLog, vbWindowBackground, vbButtonFace)
End Sub

Private Sub SetFromAnRuleStat()
    If ConfigData.FromAnRule Then
        chkSearchLog.Visible = False
        lblSearchString.Visible = False
        txtSearchString.Visible = False
    End If
End Sub

Private Function IsNext() As Boolean
    If Len(txtName.Text) > 0 Then IsNext = True
End Function
